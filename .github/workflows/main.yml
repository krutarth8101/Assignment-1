name: Build and Push to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REGISTRY_APP: 345852704676.dkr.ecr.us-east-1.amazonaws.com/webapp
      ECR_REPO_NAME_APP: webapp
      IMAGE_NAME_APP: webappimage
      
      ECR_REGISTRY_SQL: 345852704676.dkr.ecr.us-east-1.amazonaws.com/mysql
      ECR_REPO_NAME_SQL: mysql
      IMAGE_NAME_SQL: sqlimage

    steps:
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Amazon ECR for App
        id: login-ecr-app
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.ECR_REGISTRY_APP }}
          region: ${{ env.AWS_REGION }}
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Build Docker image for App
        run: |
          ls -l dockerfiles/
          docker build -t $ECR_REGISTRY_APP/$ECR_REPO_NAME_APP/$IMAGE_NAME_APP:$GITHUB_SHA -f dockerfiles/Dockerfile .

      - name: Push Docker image to ECR for App
        run: |
          docker push $ECR_REGISTRY_APP/$ECR_REPO_NAME_APP/$IMAGE_NAME_APP:$GITHUB_SHA

      - name: Login to Amazon ECR for SQL
        id: login-ecr-sql
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.ECR_REGISTRY_SQL }}
          region: ${{ env.AWS_REGION }}
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Build Docker image for SQL
        run: |
          ls -l dockerfiles/
          docker build -t $ECR_REGISTRY_SQL/$ECR_REPO_NAME_SQL/$IMAGE_NAME_SQL:$GITHUB_SHA -f dockerfiles/Dockerfile_MYSQL .

      - name: Push Docker image to ECR for SQL
        run: |
          docker push $ECR_REGISTRY_SQL/$ECR_REPO_NAME_SQL/$IMAGE_NAME_SQL:$GITHUB_SHA
